#lang sicp

(define (make-interval a b) (cons a b))
(define (lower-bound interval) (car interval))
(define (upper-bound interval) (cdr interval))

(define (make-center-percent c p)
  (let ((factor (/ p 100.0)))
    (make-interval (- c (* c factor))
                   (+ c (* c factor)))))
(define (center i)
  (/ (+ (lower-bound i) (upper-bound i)) 2))
(define (percent i)
  (let ((center (center i))
        (upper-bound (upper-bound i)))
    (* (/ (- upper-bound center) center) 100)))

(define (add-interval x y)
  (make-interval (+ (lower-bound x) (lower-bound y))
                 (+ (upper-bound x) (upper-bound y))))
(define (sub-interval x y)
  (make-interval (- (lower-bound x) (upper-bound y))
                 (- (upper-bound x) (lower-bound y))))
(define (mul-interval x y)
  (let ((p1 (* (lower-bound x) (lower-bound y)))
        (p2 (* (lower-bound x) (upper-bound y)))
        (p3 (* (upper-bound x) (lower-bound y)))
        (p4 (* (upper-bound x) (upper-bound y))))
    (make-interval (min p1 p2 p3 p4)
                   (max p1 p2 p3 p4))))
(define (div-interval x y)
  (if (<= (* (lower-bound y) (upper-bound y)) 0)
      (error "The interval spans zero: " (lower-bound y) (upper-bound y))
      (mul-interval x
                     (make-interval (/ 1.0 (upper-bound y))
                                    (/ 1.0 (lower-bound y))))))

(define (par1 r1 r2)
  (div-interval (mul-interval r1 r2)
                (add-interval r1 r2)))
(define (par2 r1 r2)
  (let ((one (make-interval 1 1)))
    (div-interval
     one (add-interval (div-interval one r1)
                       (div-interval one r2)))))

(define r1 (make-center-percent 100 8))
(define r2 (make-center-percent 200 5))
(define rp1 (par1 r1 r2))
(define rp2 (par2 r1 r2))
(display "Centre value of rp1: ") (display (center rp1)) (newline)
(display "Tolerance of rp1: ") (display (percent rp1)) (display "%") (newline)
(display "Centre value of rp2: ") (display (center rp2)) (newline)
(display "Tolerance of rp2: ") (display (percent rp2)) (display "%") (newline) (newline)

(define a (make-center-percent 10 0.2))
(define b (make-center-percent 5 0.1))
(define c (div-interval a a))
(define d (div-interval a b))
(display "Centre value of c: ") (display (center c)) (newline)
(display "Tolerance of c: ") (display (percent c)) (display "%") (newline)
(display "Centre value of d: ") (display (center d)) (newline)
(display "Tolerance of d: ") (display (percent d)) (display "%") (newline)